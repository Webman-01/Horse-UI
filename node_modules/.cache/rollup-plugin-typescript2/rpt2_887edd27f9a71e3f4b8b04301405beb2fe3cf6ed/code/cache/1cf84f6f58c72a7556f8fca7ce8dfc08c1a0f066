{"code":"import { defineComponent as _defineComponent } from 'vue';\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nimport { onMounted, provide, ref, useSlots, watch } from \"vue\";\nimport { injectTreeKey, treeProps, treeSelectEmit, } from \"./tree\";\nimport { computed } from \"vue\";\nimport { createNameSpace } from \"../../../utils/create\";\nimport HTreeNode from \"./treeNode.vue\";\nimport HVirtualList from \"../../virtualized-list/src/virtualized.vue\";\nexport default _defineComponent(Object.assign({\n    name: \"h-tree\",\n}, { __name: 'tree', props: treeProps, emits: treeSelectEmit, setup(__props, { emit: __emit }) {\n        const props = __props;\n        const bem = createNameSpace(\"tree\");\n        function createOptions(key, label, children) {\n            return {\n                getKey(node) {\n                    return node[key];\n                },\n                getLabel(node) {\n                    return node[label];\n                },\n                getChildren(node) {\n                    return node[children];\n                },\n            };\n        }\n        const treeOption = createOptions(props.treeKey, props.label, props.children);\n        const createTree = function (data, parent = null) {\n            function traversal(data, parent = null) {\n                return data.map((item) => {\n                    var _a;\n                    const children = treeOption.getChildren(item) || [];\n                    const treeNode = {\n                        treeKey: treeOption.getKey(item),\n                        label: treeOption.getLabel(item),\n                        level: parent ? parent.level + 1 : 0,\n                        children: [],\n                        rawNode: item,\n                        disabled: !!item.disabled,\n                        isLeaf: (_a = item.isLeaf) !== null && _a !== void 0 ? _a : children.length === 0,\n                        parentKey: parent === null || parent === void 0 ? void 0 : parent.treeKey,\n                    };\n                    if (children.length > 0) {\n                        treeNode.children = traversal(children, treeNode);\n                    }\n                    return treeNode;\n                });\n            }\n            const result = traversal(data, parent);\n            return result;\n        };\n        const tree = ref([]);\n        watch(() => props.data, (data) => {\n            tree.value = createTree(data);\n            console.log(tree.value);\n        }, { immediate: true });\n        const expandedKeySet = ref(new Set(props.defaultExpandedKeys));\n        const flatTree = computed(() => {\n            let expandedKey = expandedKeySet.value;\n            let result = [];\n            const nodes = tree.value || [];\n            const stack = [];\n            for (let i = nodes.length - 1; i >= 0; --i) {\n                stack.push(nodes[i]);\n            }\n            while (stack.length) {\n                const node = stack.pop();\n                if (!node)\n                    continue;\n                result.push(node);\n                if (expandedKey.has(node.treeKey)) {\n                    const children = node.children;\n                    if (children) {\n                        for (let i = node.children.length - 1; i >= 0; --i) {\n                            stack.push(node.children[i]);\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n        console.log(flatTree.value, \"flat\");\n        function isExpanded(node) {\n            return expandedKeySet.value.has(node.treeKey);\n        }\n        function toggleExpandAndCollapse(node) {\n            const expandKeys = expandedKeySet.value;\n            if (expandKeys.has(node.treeKey) && !loadingKeysRef.value.has(node.treeKey)) {\n                collapse(node);\n            }\n            else {\n                expand(node);\n            }\n        }\n        function collapse(node) {\n            expandedKeySet.value.delete(node.treeKey);\n        }\n        const loadingKeysRef = ref(new Set());\n        function expand(node) {\n            expandedKeySet.value.add(node.treeKey);\n            if (!node.children.length && !node.isLeaf) {\n                const loadingKeys = loadingKeysRef.value;\n                if (!loadingKeys.has(node.treeKey)) {\n                    loadingKeys.add(node.treeKey);\n                    const lazy = props.lazy;\n                    if (lazy) {\n                        lazy(node.rawNode).then((children) => {\n                            node.rawNode.children = children;\n                            node.children = createTree(children, node);\n                            loadingKeys.delete(node.treeKey);\n                        });\n                    }\n                }\n            }\n        }\n        const emit = __emit;\n        const selectTreeRef = ref([]);\n        watch(() => props.selectedKeys, (value) => {\n            if (value) {\n                selectTreeRef.value = value;\n            }\n        }, { immediate: true });\n        function handleSelect(node) {\n            let keys = Array.from(selectTreeRef.value);\n            if (!props.selectable)\n                return;\n            if (props.multiple) {\n                const index = keys.findIndex((key) => key === node.treeKey);\n                if (index > -1) {\n                    keys.splice(index, 1);\n                }\n                else {\n                    keys.push(node.treeKey);\n                }\n            }\n            else {\n                if (keys.includes(node.treeKey)) {\n                    keys = [];\n                }\n                else {\n                    keys = [node.treeKey];\n                }\n            }\n            emit(\"update:selectedKeys\", keys);\n        }\n        provide(injectTreeKey, {\n            slots: useSlots(),\n        });\n        const checkedKeysRefs = ref(new Set(props.defaultCheckedKeys));\n        function isChecked(node) {\n            return checkedKeysRefs.value.has(node.treeKey);\n        }\n        function isDisabled(node) {\n            return !!node.disabled;\n        }\n        const indeterminateRefs = ref(new Set());\n        function isIndeterminate(node) {\n            return indeterminateRefs.value.has(node.treeKey);\n        }\n        function toggle(node, isChecked) {\n            if (!node)\n                return;\n            if (isChecked) {\n                indeterminateRefs.value.delete(node.treeKey);\n            }\n            const checkKeys = checkedKeysRefs.value;\n            checkKeys[isChecked ? \"add\" : \"delete\"](node.treeKey);\n            const children = node.children;\n            if (children) {\n                children.forEach((item) => {\n                    if (!item.disabled) {\n                        toggle(item, isChecked);\n                    }\n                });\n            }\n        }\n        function findNode(key) {\n            return flatTree.value.find((node) => node.treeKey === key);\n        }\n        function updateCheckedKeys(node) {\n            if (node.parentKey) {\n                const parentNode = findNode(node.parentKey);\n                if (parentNode) {\n                    let isAllChecked = true;\n                    let isChecked = false;\n                    const nodes = parentNode.children;\n                    for (const node of nodes) {\n                        if (checkedKeysRefs.value.has(node.treeKey)) {\n                            isChecked = true;\n                        }\n                        else if (indeterminateRefs.value.has(node.treeKey)) {\n                            isAllChecked = false;\n                            isChecked = true;\n                        }\n                        else {\n                            isAllChecked = false;\n                        }\n                    }\n                    if (isAllChecked) {\n                        checkedKeysRefs.value.add(parentNode.treeKey);\n                        indeterminateRefs.value.delete(parentNode.treeKey);\n                    }\n                    else if (isChecked) {\n                        checkedKeysRefs.value.delete(parentNode.treeKey);\n                        indeterminateRefs.value.add(parentNode.treeKey);\n                    }\n                    updateCheckedKeys(parentNode);\n                }\n            }\n        }\n        function toggleCheck(node, isChecked) {\n            toggle(node, isChecked);\n            updateCheckedKeys(node);\n        }\n        onMounted(() => {\n            checkedKeysRefs.value.forEach((key) => {\n                toggle(findNode(key), true);\n            });\n        });\n        const dragTreeKeys = computed(() => {\n            let expandedKey = expandedKeySet.value;\n            let result = [];\n            const nodes = tree.value || [];\n            const stack = [];\n            for (let i = nodes.length - 1; i >= 0; --i) {\n                stack.push(nodes[i]);\n            }\n            while (stack.length) {\n                const node = stack.pop();\n                if (!node)\n                    continue;\n                result.push(node.treeKey);\n                if (expandedKey.has(node.treeKey)) {\n                    const children = node.children;\n                    if (children) {\n                        for (let i = node.children.length - 1; i >= 0; --i) {\n                            stack.push(node.children[i]);\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                class: _normalizeClass(_unref(bem).b())\n            }, [\n                _createVNode(HVirtualList, {\n                    items: flatTree.value,\n                    remain: _ctx.nodeRemain,\n                    size: _ctx.nodeSize\n                }, {\n                    default: _withCtx(({ node }) => [\n                        (_openBlock(), _createBlock(HTreeNode, {\n                            key: node.treeKey,\n                            node: node,\n                            expanded: isExpanded(node),\n                            onToggle: toggleExpandAndCollapse,\n                            \"loading-keys\": loadingKeysRef.value,\n                            onSelect: handleSelect,\n                            \"selected-keys\": selectTreeRef.value,\n                            \"show-checkbox\": _ctx.showCheckbox,\n                            checked: isChecked(node),\n                            disabled: isDisabled(node),\n                            indeterminate: isIndeterminate(node),\n                            onCheck: toggleCheck\n                        }, null, 8, [\"node\", \"expanded\", \"loading-keys\", \"selected-keys\", \"show-checkbox\", \"checked\", \"disabled\", \"indeterminate\"]))\n                    ]),\n                    _: 1\n                }, 8, [\"items\", \"remain\", \"size\"])\n            ], 2));\n        };\n    } }));\n//# sourceMappingURL=tree.vue?vue&type=script&setup=true&lang.js.map","references":["/Users/mamingzhe/Horse UI/node_modules/.pnpm/vue@3.4.21_typescript@5.4.2/node_modules/vue/dist/vue.d.ts","/Users/mamingzhe/Horse UI/node_modules/.pnpm/vue@3.4.21_typescript@5.4.2/node_modules/vue/dist/vue.d.ts","/Users/mamingzhe/Horse UI/node_modules/.pnpm/vue@3.4.21_typescript@5.4.2/node_modules/vue/dist/vue.d.ts","/Users/mamingzhe/Horse UI/packages/components/tree/src/tree.ts","/Users/mamingzhe/Horse UI/node_modules/.pnpm/vue@3.4.21_typescript@5.4.2/node_modules/vue/dist/vue.d.ts","/Users/mamingzhe/Horse UI/packages/utils/create.ts"],"map":"{\"version\":3,\"file\":\"tree.vue?vue&type=script&setup=true&lang.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../packages/components/tree/src/tree.vue?vue&type=script&setup=true&lang.ts\"],\"names\":[],\"mappings\":\"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\"}"}
